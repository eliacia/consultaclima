data = data[1:10,]
# order to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='black')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# apply to each variable
variables = c('comments', 'criteria_assumptions_principles', 'comments_implementation_means')
for (var in variable){
groupedWORDCOUNT(var)
}
file
files
variable
#----------------------------------#
# Paper XXX                        #
#                                  #
# @claudioalvesmonteiro            #
# May/2020                         #
#----------------------------------#
# load packages
library(ggplot2)
library(wordcloud)
library(ggpubr)
# list files
files <- list.files('results/tables')
# Tema para Graficos
tema_massa <- function (base_size = 12, base_family = "") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(axis.text.x = element_text(size=12,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(size=12,angle=0,hjust=1,vjust=0,face="plain"),
axis.title.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=0,face="plain"),
axis.title.y = element_text(colour="black",size=12,angle=90,hjust=0.5,vjust=0.6,face="plain"),
title = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.5,face="plain"))
}
#==============================================
# read files and generate WORDCLOUDS for each
#==============================================
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove pdf from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 2,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
#=======================
# WORDCOUNT barplots
#=======================
# function to group sectors count
groupedWORDCOUNT <- function(variable){
# load data
d1 = read.csv(paste0('results/tables/',variable, '_academia.csv'))
d2 = read.csv(paste0('results/tables/',variable, '_setor empresarial','.csv'))
d3 = read.csv(paste0('results/tables/',variable, '_terceiro setor','.csv'))
d4 = read.csv(paste0('results/tables/',variable, '_setor publico','.csv'))
# wordcount plots
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
#
# arrange plots and save
jovProp  <- ggarrange(p1, p2, p3, p4, ncol = 4, nrow = 1)
ggsave(paste0('wordcount_',variable,'.png'), jovProp, path = "results/plots", width = 12, height = 4, units = "in")
}
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:10,]
# order to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=as.character(data$freq)))+
geom_bar(stat='identity', fill='black')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# apply to each variable
variables = c('comments', 'criteria_assumptions_principles', 'comments_implementation_means')
for (var in variables){
groupedWORDCOUNT(var)
}
variable = variables[3]
# load data
d1 = read.csv(paste0('results/tables/',variable, '_academia.csv'))
d2 = read.csv(paste0('results/tables/',variable, '_setor empresarial','.csv'))
d3 = read.csv(paste0('results/tables/',variable, '_terceiro setor','.csv'))
d4 = read.csv(paste0('results/tables/',variable, '_setor publico','.csv'))
# wordcount plots
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
p1
p2
p3
p4
p1
p2
p3
d4 = read.csv(paste0('results/tables/',variable, '_setor publico','.csv'))
source('~/Documents/Pesquisa/Environment/greenlobby-textmining/code/data-visualization.R')
# load packages
library(ggplot2)
library(wordcloud)
library(ggpubr)
# list files
files <- list.files('results/tables')
# Tema para Graficos
tema_massa <- function (base_size = 12, base_family = "") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(axis.text.x = element_text(size=12,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(size=12,angle=0,hjust=1,vjust=0,face="plain"),
axis.title.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=0,face="plain"),
axis.title.y = element_text(colour="black",size=12,angle=90,hjust=0.5,vjust=0.6,face="plain"),
title = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.5,face="plain"))
}
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove pdf from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 2,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
# function to group sectors count
groupedWORDCOUNT <- function(variable){
# load data
d1 = read.csv(paste0('results/tables/',variable, '_academia.csv'))
d2 = read.csv(paste0('results/tables/',variable, '_setor empresarial','.csv'))
if (variable != 'comments_implementation_means'){
d3 = read.csv(paste0('results/tables/',variable, '_terceiro setor','.csv'))
d4 = read.csv(paste0('results/tables/',variable, '_setor publico','.csv'))
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
}
# wordcount plots
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
# arrange plots and save
if (variable != 'comments_implementation_means'){
jovProp  <- ggarrange(p1, p2, p3, p4, ncol = 4, nrow = 1)
} else {
jovProp  <- ggarrange(p1, p2, ncol = 2, nrow = 1)
}
ggsave(paste0('wordcount_',variable,'.png'), jovProp, path = "results/plots", width = 12, height = 4, units = "in")
}
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:10,]
# order to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=as.character(data$freq)))+
geom_bar(stat='identity', fill='black')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# apply to each variable
variables = c('comments', 'criteria_assumptions_principles', 'comments_implementation_means')
for (var in variables){
groupedWORDCOUNT(var)
}
# load packages
library(ggplot2)
library(wordcloud)
library(ggpubr)
# list files
files <- list.files('results/tables')
# Tema para Graficos
tema_massa <- function (base_size = 12, base_family = "") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(axis.text.x = element_text(size=12,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(size=12,angle=0,hjust=1,vjust=0,face="plain"),
axis.title.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=0,face="plain"),
axis.title.y = element_text(colour="black",size=12,angle=90,hjust=0.5,vjust=0.6,face="plain"),
title = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.5,face="plain"))
}
files
file=files[0]
# read data
data <- read.csv(paste0('results/tables/', file))
# read data
data <- read.csv(paste0('results/tables/', file))
file
file=files[1]
fil
file
# read data
data <- read.csv(paste0('results/tables/', file))
# remove csv from filename
file = gsub('.{4}$', '', file)
file
data
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 2,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
# load packages
library(ggplot2)
library(wordcloud)
library(ggpubr)
# list files
files <- list.files('results/tables')
# Tema para Graficos
tema_massa <- function (base_size = 12, base_family = "") {
theme_minimal(base_size = base_size, base_family = base_family) %+replace%
theme(axis.text.x = element_text(size=12,hjust=.5,vjust=.5,face="plain"),
axis.text.y = element_text(size=12,angle=0,hjust=1,vjust=0,face="plain"),
axis.title.x = element_text(colour="black",size=12,angle=0,hjust=.5,vjust=0,face="plain"),
axis.title.y = element_text(colour="black",size=12,angle=90,hjust=0.5,vjust=0.6,face="plain"),
title = element_text(colour="black",size=14,angle=0,hjust=.5,vjust=.5,face="plain"))
}
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove csv from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 2,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
# load data
d1 = read.csv('results/tables/academia.csv')
d2 = read.csv('results/tables/setor_empresarial.csv')
d3 = read.csv('results/tables/terceiro_setor.csv')
d4 = read.csv('results/tables/setor_publico.csv')
d1
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:15,]
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=as.character(data$freq)))+
geom_bar(stat='identity', fill='black')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# load data
d1 = read.csv('results/tables/academia.csv')
d2 = read.csv('results/tables/setor_empresarial.csv')
d3 = read.csv('results/tables/terceiro_setor.csv')
d4 = read.csv('results/tables/setor_publico.csv')
# wordcount plots
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
# arrange plots and save
jovProp  <- ggarrange(p1, p2, p3, p4, ncol = 4, nrow = 1)
jovProp
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:15,]
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=as.character(data$freq)))+
geom_bar(stat='identity', fill='#696969')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# load data
d1 = read.csv('results/tables/academia.csv')
d2 = read.csv('results/tables/setor_empresarial.csv')
d3 = read.csv('results/tables/terceiro_setor.csv')
d4 = read.csv('results/tables/setor_publico.csv')
# wordcount plots
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
# arrange plots and save
jovProp  <- ggarrange(p1, p2, p3, p4, ncol = 4, nrow = 1)
ggsave('wordcount_total.png', jovProp, path = "results/plots", width = 14, height = 4, units = "in")
d3[1:10]
d3[1:10,]
data = d3
d3 = read.csv('results/tables/terceiro_setor.csv')
data = d3
data
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=as.character(data$freq)))+
geom_bar(stat='identity', fill='#696969')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
plot
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
plot
title='3'
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
plot
# select most freq
data = data[1:15,]
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
plot
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:15,]
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
geom_label(aes(label=data$freq), size=2)+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
d3 = read.csv('results/tables/terceiro_setor.csv')
p3 = plotWordCount(d3, 'Third Sector')
p3
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:15,]
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
geom_label(aes(label=data$freq), size=3)+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
# load data
d1 = read.csv('results/tables/academia.csv')
d2 = read.csv('results/tables/setor_empresarial.csv')
d3 = read.csv('results/tables/terceiro_setor.csv')
d4 = read.csv('results/tables/setor_publico.csv')
# wordcount plots
p1 = plotWordCount(d1, 'Academia')
p2 = plotWordCount(d2, 'Companies')
p3 = plotWordCount(d3, 'Third Sector')
p4 = plotWordCount(d4, 'Public Sector')
# arrange plots and save
jovProp  <- ggarrange(p1, p2, p3, p4, ncol = 4, nrow = 1)
ggsave('wordcount_total.png', jovProp, path = "results/plots", width = 14, height = 4, units = "in")
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove csv from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 3,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
# funtion to plot wordcount
plotWordCount <- function(data, title){
# select most freq
data = data[1:15,]
# order factors to plot
data[,1] = factor(data[,1], levels = data[,1][order(data$freq)])
# plot
plot = ggplot(data, aes(x=data[,1], y=data$freq))+
geom_bar(stat='identity', fill='#696969')+
geom_label(aes(label=data$freq), size=3)+
labs(y='Freq', x='', title=title)+
coord_flip()+
tema_massa()
return(plot)
}
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove csv from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 3,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
for (file in files){
# read data
data <- read.csv(paste0('results/tables/', file))
# test if data is empty
if (dim(data)[1] == 0){
print(paste0(file, ' EMPTY!'))
} else {
# remove csv from filename
file = gsub('.{4}$', '', file)
# create png file
png(file=paste0('results/plots/', file, '.png'), width=500, height=500)
# generate wordcloud
wordcloud(words = data[,1],
freq = data[,2],
min.freq = 2,
random.order=FALSE,
rot.per=0.2,
use.r.layout=T,
colors=brewer.pal(8, "Dark2"))
# save wordcloud as png
dev.off()
}
}
